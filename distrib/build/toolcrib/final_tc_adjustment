#! /bin/bash +h

set +h

# Get environs
#
#   Save STDOUT; it's the .out dest and quite needed.
exec 4>&1
. toolcrib/environment
set_build_environment NO_REDIRECT
#   Restore STDOUT
exec 1>&4

echo
if [ "$1" == "--unwind" ]; then
  echo "Unwinding final toolchain adjustment to rebuild the final stage"
  # Initialize STATUS
  #
  STATUS=2
else
  echo "Final toolchain adjustment"
  # Initialize STATUS
  #
  STATUS=0
fi
echo

# Are we making the final adjustment, or unwinding?
#
if [ $STATUS -eq 0 ]; then
  #################

  # First, perform the adjustment

  # Tweak loader from last toolchain compile
  #
  mv -v ${TOOLS_DIR}/bin/{ld,ld-old}
  mv -v ${TOOLS_DIR}/$(gcc -dumpmachine)/bin/{ld,ld-old}
  mv -v ${TOOLS_DIR}/bin/{ld-new,ld}
  ln -sv ${TOOLS_DIR}/bin/ld ${TOOLS_DIR}/$(gcc -dumpmachine)/bin/ld

  # Must use the correct ProgInterp
  case $mARCH in
    i*86) expectInterp="/lib/ld-linux.so.2" ;;
    x86_64) expectInterp="/lib64/ld-linux-x86-64.so.2" ;;
  esac

  # Tweak gcc specs
  #
  gcc -dumpspecs | sed \
    -e 's@'${TOOLS_DIR}${expectInterp}'@'$expectInterp'@g' \
    -e '/\*startfile_prefix_spec:/{n;s@.*@/usr/lib/ @}' \
    -e '/\*cpp:/{n;s@$@ -isystem /usr/include@}' > \
  `dirname $(gcc --print-libgcc-file-name)`/specs

  #################

  # Now check for gcc environs problems. These must all be correct
  #   before proceeding to finish the final build!

  # Does 'cc' exist as symlink?
  if [ "`readlink -n -s ${TOOLS_DIR}/bin/cc`" != "gcc" ]; then
    echo "cc as symlink to gcc not found!"
    STATUS=1
  fi

  # Verify that the final build environment is correct.

  # compile an empty program
  #
  echo 'main(){}' > dummy.c
  cc dummy.c -v -Wl,--verbose &> dummy.log

  # Right program interpreter?
  #
  readelf -l a.out | grep ': /lib' >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "gcc uses wrong program interpreter!"
    readelf -l a.out | grep "Requesting program interpreter" | sed -e 's/^/    /'
    STATUS=1
  fi

  # GCC using correct startfiles?
  #
  for i in 1 i n; do
    grep "/usr/lib.*/crt${i}.o succeeded" dummy.log >/dev/null 2>&1
    if [ $? -ne 0 ]; then
      echo "crt${i} startfile is wrong!"
      grep "/crt${i}.o succeeded" | sed -e 's/^/    /'
      STATUS=1
    fi
  done

  # GCC searching for correct header files?
  #
  grep -B1 '^ /usr/include' dummy.log >/tmp/a.a
  cat >/tmp/b.b <<END
#include <...> search starts here:
 /usr/include
END
  diff /tmp/a.a /tmp/b.b >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "gcc is searching for the wrong header files:"
    sed -e 's/^/    /' /tmp/a.a
    echo "gcc should search in:"
    sed -e 's/^/    /' /tmp/b.b
    STATUS=1
  fi
  rm /tmp/a.a /tmp/b.b

  # Loader using correct search paths?
  #
  grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g' >/tmp/a.a

  cat >>/tmp/b.b <<END
SEARCH_DIR("/usr/lib")
SEARCH_DIR("/lib");
END
  diff /tmp/a.a /tmp/b.b >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "Loader is using incorrect search paths:"
    sed -e 's/^/    /' /tmp/a.a
    echo "Loader should search in:"
    sed -e 's/^/    /' /tmp/b.b
    STATUS=1
  fi
  rm /tmp/a.a /tmp/b.b

  # Using correct libc?
  #
  if [ "$BITS_64" == "yes" ]; then mINST=64; fi
  grep "attempt to open /lib${mINST}/libc.so.6" dummy.log >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "Loader is using incorrect libc:"
    egrep "attempt to open.*/libc\.so\." dummy.log | sed -e 's/^/    /'
    STATUS=1
  fi

  # Using correct dynamic linker?
  #
  grep "found `basename ${expectInterp}` at ${expectInterp}" dummy.log >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "Wrong or no dynamic linker found!"
    grep "found" dummy.log | sed -e 's/^/    /'
    STATUS=1
  fi

  #################

fi  # making final adjustment



# Now clean up and finish up, reversing the adjustment if needed


# If adjustment succeeded, clean and exit with success
#
if [ $STATUS -eq 0 ]; then
  # All is well; it is safe to proceed!
  #
  rm -f dummy.c dummy.log a.out
  exit 0
fi

# If errors found during the adjustment, notify the user
#
if [ $STATUS -eq 1 ]; then
  echo
  echo
  echo "Errors found! Reversing adjustment..."
  echo
fi

# If errors found or if unwinding, revert the changes
#
if [ $STATUS -eq 1 -o $STATUS -eq 2 ]; then
  # revert other adjustments
  if [ -f ${TOOLS_DIR}/bin/ld-old ]; then
    mv -v ${TOOLS_DIR}/bin/{ld,ld-new}
    mv -v ${TOOLS_DIR}/$(gcc -dumpmachine)/bin/{ld-old,ld}
    mv -v ${TOOLS_DIR}/bin/{ld-old,ld}
  fi
  # Delete specs file
    rm -vf `dirname $(/tools/bin/gcc --print-libgcc-file-name)`/specs
fi

# If unwinding, exit with success
#
[ $STATUS == 2 ] && exit 0

# If adjustment failed, or STATUS is unknown value, exit with failure
#
if [ $STATUS -ne 1 ]; then
  echo "Error: STATUS='$STATUS'. Wall ?"
fi

exit 1
