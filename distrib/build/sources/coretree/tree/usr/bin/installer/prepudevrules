#! /bin/bash

device=`basename $1`

cd /sys/block

# Ensure 'serial' is blank to start with
serial=""

UDEVINFO="/sbin/udevadm info --path=${PWD}/${device} --query=all"

# First try ID_SERIAL_SHORT; if not found, 'serial' will remain blank. This should work for
#   all plain non-RAID SCSI and SATA/IDE drives
serial=`$UDEVINFO | grep ID_SERIAL_SHORT | sed -e 's/.*=//'`

# Now try ID_SCSI; again, if not found, 'serial' will remain blank. This should set a 'serial #'
#   for the Fusion MPT driver, if not all SCSI RAID 'drives'.
[ -z "$serial" ] && serial=`$UDEVINFO | grep ID_SCSI | sed -e 's/.*=//'`

# If serial is still blank, neither ID_SERIAL_SHORT nor ID_SCSI are available.
if [ -z "$serial" ]; then
  # non-virtio disks
  [ -f "${device}/device/serial" ] && serial=`cat ${device}/device/serial 2>&1 | sed -e 's/ /-/g'`
  # virtio disks don't follow the custom
  [ -f "${device}/serial" ] && serial=`cat ${device}/serial 2>&1 | sed -e 's/ /-/g'`
fi

# The fallback so we know nothing useful was found.
[ -z "$serial" ] && serial="UNK_SERIAL"

(
  echo "# Smoothwall Express persistent device names"
  echo
  echo "# Auto-generated by installation program: `date`"
  
  echo "# hard drive's symlink"
  echo "SUBSYSTEM==\"block\",KERNEL==\"[hs]d*|cciss*\",ENV{DEVTYPE}==\"disk\",ENV{ID_SERIAL_SHORT}==\"${serial}\", SYMLINK+=\"harddisk\""
  echo "SUBSYSTEM==\"block\",KERNEL==\"[hs]d*|cciss*\",ENV{DEVTYPE}==\"partition\",ENV{ID_SERIAL_SHORT}==\"${serial}\", SYMLINK+=\"harddisk%n\""
  echo "SUBSYSTEM==\"block\",KERNEL==\"vd*\",ENV{DEVTYPE}==\"disk\",ENV{ID_SERIAL}==\"${serial}\", SYMLINK+=\"harddisk\""
  echo "SUBSYSTEM==\"block\",KERNEL==\"vd*\",ENV{DEVTYPE}==\"partition\",ENV{ID_SERIAL}==\"${serial}\", SYMLINK+=\"harddisk%n\""
  echo "SUBSYSTEM==\"block\",ENV{ID_BUS}==\"scsi\",KERNEL==\"sd*\",ENV{DEVTYPE}==\"disk\",ENV{ID_SERIAL_SHORT}==\"\",ENV{ID_SCSI}==\"${serial}\", SYMLINK+=\"harddisk\""
  echo "SUBSYSTEM==\"block\",ENV{ID_BUS}==\"scsi\",KERNEL==\"sd*\",ENV{DEVTYPE}==\"partition\",ENV{ID_SERIAL_SHORT}==\"\",ENV{ID_SCSI}==\"${serial}\", SYMLINK+=\"harddisk%n\""
  echo
  
) > /etc/udev/rules.d/70-Smoothwall-custom-disk.rules

# Do the NIC rules, too
mv /etc/udev/rules.d/70-persistent-net.rules /etc/udev/rules.d/70-Smoothwall-custom-NIC.rules

echo "  reload udev rules, trigger disk, then settle"
/sbin/udevadm control --reload
/bin/echo "change" > /sys/block/${device}/uevent
/sbin/udevadm settle
